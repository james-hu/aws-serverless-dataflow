before:
  hooks:
    - rm -rf dist
    - mkdir dist
    - mkdir dist/aws-serverless-dataflow_darwin_amd64
    - cp pkg/aws-serverless-dataflow-macos-x64 dist/aws-serverless-dataflow_darwin_amd64/aws-serverless-dataflow
    - mkdir dist/aws-serverless-dataflow_darwin_arm64
    - cp pkg/aws-serverless-dataflow-macos-arm64 dist/aws-serverless-dataflow_darwin_arm64/aws-serverless-dataflow
    - mkdir dist/aws-serverless-dataflow_linux_amd64
    - cp pkg/aws-serverless-dataflow-linux-x64 dist/aws-serverless-dataflow_linux_amd64/aws-serverless-dataflow
    - mkdir dist/aws-serverless-dataflow_linux_arm64
    - cp pkg/aws-serverless-dataflow-linux-arm64 dist/aws-serverless-dataflow_linux_arm64/aws-serverless-dataflow
    - mkdir dist/aws-serverless-dataflow_windows_amd64
    - cp pkg/aws-serverless-dataflow-win-x64.exe dist/aws-serverless-dataflow_windows_amd64/aws-serverless-dataflow.exe
builds:
  -
    skip: true
archives:
  - replacements:
      darwin: Darwin
      linux: Linux
      windows: Windows
      386: i386
      amd64: x86_64
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

brews:
  -
    # NOTE: make sure the url_template, the token and given repo (github or
    # gitlab) owner and name are from the same kind.
    # We will probably unify this in the next major version like it is
    # done with scoop.

    # GitHub/GitLab repository to push the formula to
    tap:
      # Repository owner template. (templateable)
      owner: handy-common-utils

      # Repository name. (templateable)
      name: homebrew-tap

    # Template for the url which is determined by the given Token (github,
    # gitlab or gitea)
    #
    # Default depends on the client.
    url_template: "https://github.com/james-hu/aws-serverless-dataflow/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # Git author used to commit to the repository.
    # Defaults are shown.
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com

    # The project name and current git tag are used in the format string.
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"

    # Folder inside the repository to put the formula.
    # Default is the root folder.
    folder: Formula

    # Your app's homepage.
    # Default is empty.
    homepage: "https://github.com/james-hu/aws-serverless-dataflow"

    # Template of your app's description.
    # Default is empty.
    description: "A command-line tool for Visualisation of AWS serverless (Lambda, API Gateway, SNS, SQS, etc.) dataflow"

    # SPDX identifier of your app's license.
    # Default is empty.
    license: "Apache-2.0"

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Default is false.
    skip_upload: true


# modelines, feel free to remove those if you don't want/use them:
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
